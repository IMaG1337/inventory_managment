"""First migration

Revision ID: ebc50e28c201
Revises: 
Create Date: 2022-12-27 12:23:09.176814

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ebc50e28c201'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('object_types',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('description', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('rooms',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('floor', sa.Integer(), nullable=False),
    sa.Column('number', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('employee',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('surname', sa.VARCHAR(), nullable=False),
    sa.Column('patronymicon', sa.VARCHAR(), nullable=True),
    sa.Column('position', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('departments_uid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('room_uid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['departments_uid'], ['departments.uid'], ),
    sa.ForeignKeyConstraint(['room_uid'], ['rooms.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('inventory_info',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('receipt_data', sa.DateTime(), nullable=True),
    sa.Column('model', sa.VARCHAR(), nullable=False),
    sa.Column('document', sa.VARCHAR(), nullable=False),
    sa.Column('date_of_registration', sa.DateTime(), nullable=True),
    sa.Column('cost', sa.VARCHAR(), nullable=False),
    sa.Column('useful_life', sa.DateTime(), nullable=True),
    sa.Column('note', sa.VARCHAR(), nullable=False),
    sa.Column('write_off_day', sa.DateTime(), nullable=True),
    sa.Column('inventory_number', sa.VARCHAR(), nullable=False),
    sa.Column('inventory_serial', sa.VARCHAR(), nullable=True),
    sa.Column('responsible_uid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('object_types_uid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['object_types_uid'], ['object_types.uid'], ),
    sa.ForeignKeyConstraint(['responsible_uid'], ['employee.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_inventory_info_inventory_number'), 'inventory_info', ['inventory_number'], unique=True)
    op.create_index(op.f('ix_inventory_info_object_types_uid'), 'inventory_info', ['object_types_uid'], unique=False)
    op.create_index(op.f('ix_inventory_info_responsible_uid'), 'inventory_info', ['responsible_uid'], unique=False)
    op.create_table('inventory_card',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('employee_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('inventory_info_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('room_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['employee_uid'], ['employee.uid'], ),
    sa.ForeignKeyConstraint(['inventory_info_uid'], ['inventory_info.uid'], ),
    sa.ForeignKeyConstraint(['room_uid'], ['rooms.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_index(op.f('ix_inventory_card_employee_uid'), 'inventory_card', ['employee_uid'], unique=False)
    op.create_index(op.f('ix_inventory_card_inventory_info_uid'), 'inventory_card', ['inventory_info_uid'], unique=True)
    op.create_index(op.f('ix_inventory_card_room_uid'), 'inventory_card', ['room_uid'], unique=False)
    op.create_table('movements',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('reason', sa.VARCHAR(), nullable=True),
    sa.Column('from_employee_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('to_employee_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('inventory_card_uid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['from_employee_uid'], ['employee.uid'], ),
    sa.ForeignKeyConstraint(['inventory_card_uid'], ['inventory_card.uid'], ),
    sa.ForeignKeyConstraint(['to_employee_uid'], ['employee.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    op.create_table('temp_inventory_card',
    sa.Column('uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('employee_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('room_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('inventory_card_uid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['employee_uid'], ['employee.uid'], ),
    sa.ForeignKeyConstraint(['inventory_card_uid'], ['inventory_card.uid'], ),
    sa.ForeignKeyConstraint(['room_uid'], ['rooms.uid'], ),
    sa.PrimaryKeyConstraint('uid'),
    sa.UniqueConstraint('uid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('temp_inventory_card')
    op.drop_table('movements')
    op.drop_index(op.f('ix_inventory_card_room_uid'), table_name='inventory_card')
    op.drop_index(op.f('ix_inventory_card_inventory_info_uid'), table_name='inventory_card')
    op.drop_index(op.f('ix_inventory_card_employee_uid'), table_name='inventory_card')
    op.drop_table('inventory_card')
    op.drop_index(op.f('ix_inventory_info_responsible_uid'), table_name='inventory_info')
    op.drop_index(op.f('ix_inventory_info_object_types_uid'), table_name='inventory_info')
    op.drop_index(op.f('ix_inventory_info_inventory_number'), table_name='inventory_info')
    op.drop_table('inventory_info')
    op.drop_table('employee')
    op.drop_table('rooms')
    op.drop_table('object_types')
    op.drop_table('departments')
    # ### end Alembic commands ###
